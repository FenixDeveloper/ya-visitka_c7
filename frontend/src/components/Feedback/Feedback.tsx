import { FC, useState, useEffect } from 'react';
import likeIcon from '../../assets/icons/reactions/üëç.svg';
import dislikeIcon from '../../assets/icons/reactions/üëéÔ∏è.svg';
import waveIcon from '../../assets/icons/reactions/üëãÔ∏è.svg';
import smileIcon from '../../assets/icons/reactions/üôÇÔ∏è.svg';
import sadIcon from '../../assets/icons/reactions/üòûÔ∏è.svg';
import laughIcon from '../../assets/icons/reactions/ü§£Ô∏è.svg';
import angryIcon from '../../assets/icons/reactions/üò¨Ô∏è.svg';
import scaryIcon from '../../assets/icons/reactions/üò±Ô∏è.svg';
import heartIcon from '../../assets/icons/reactions/‚ù§Ô∏è.svg';
import styles from './Feedback.module.scss';
import { FormEvent } from 'react';

const IconeArr = [
  { iconName: likeIcon, alt: 'likeIcon' },
  { iconName: dislikeIcon, alt: 'likeIcon' },
  { iconName: waveIcon, alt: 'waveIcon' },
  { iconName: smileIcon, alt: 'smileIcon' },
  { iconName: sadIcon, alt: 'sadIcon' },
  { iconName: laughIcon, alt: 'laughIcon' },
  { iconName: angryIcon, alt: 'angryIcon' },
  { iconName: scaryIcon, alt: 'scaryIcon' },
  { iconName: heartIcon, alt: 'heartIcon' },
];

export const Feedback: FC = () => {
  //–¥–ª—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  const initfeedbackTextArr = [
    ' 1–ö–ª–∞—Å—Å–Ω—ã–µ —É —Ç–µ–±—è —É–≤–ª–µ—á–µ–Ω–∏—è, —è —Ç–æ–∂–µ –∏–≥—Ä–∞—é –≤ –Ω–∞—Å—Ç–æ–ª–∫–∏, –ª—é–±–∏–º–∞—è –∏–≥—Ä–∞ ‚Äî –≠–≤–æ–ª—é—Ü–∏—è. –õ—é–±–ª—é –µ—â–µ –º—É–∑—ã–∫—É —Å–ª—É—à–∞—Ç—å –∏ –æ—Ç–¥—ã—Ö–∞—Ç—å –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ. ü§£',
    ' 2–ö–ª–∞—Å—Å–Ω—ã–µ —É —Ç–µ–±—è —É–≤–ª–µ—á–µ–Ω–∏—è, —è —Ç–æ–∂–µ –∏–≥—Ä–∞—é –≤ –Ω–∞—Å—Ç–æ–ª–∫–∏, –ª—é–±–∏–º–∞—è –∏–≥—Ä–∞ ‚Äî –≠–≤–æ–ª—é—Ü–∏—è. –õ—é–±–ª—é –µ—â–µ –º—É–∑—ã–∫—É —Å–ª—É—à–∞—Ç—å –∏ –æ—Ç–¥—ã—Ö–∞—Ç—å –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ. ü§£',
    ' 3–ö–ª–∞—Å—Å–Ω—ã–µ —É —Ç–µ–±—è —É–≤–ª–µ—á–µ–Ω–∏—è, —è —Ç–æ–∂–µ –∏–≥—Ä–∞—é –≤ –Ω–∞—Å—Ç–æ–ª–∫–∏, –ª—é–±–∏–º–∞—è –∏–≥—Ä–∞ ‚Äî –≠–≤–æ–ª—é—Ü–∏—è. –õ—é–±–ª—é –µ—â–µ –º—É–∑—ã–∫—É —Å–ª—É—à–∞—Ç—å –∏ –æ—Ç–¥—ã—Ö–∞—Ç—å –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ. ü§£',
  ];
  const [inputValue, setInputValue] = useState<string>('');
  const [feedbackTextArr, setFeedbackTextArr] =
    useState<string[]>(initfeedbackTextArr);

  //—Ç–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  const addFeedback = (comment: string) => {
    setFeedbackTextArr([...feedbackTextArr, comment]);
    setInputValue('');
  };
  //–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter
  const onSubmit = (e: FormEvent) => {
    e.preventDefault();
    addFeedback(inputValue);
  };

  const handleIconClick = () => {
    console.log('Click')
  }
  return (
    //–±–ª–æ–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    <div className={styles.feedbackModal}>
      <div className={styles.feedbackTexts}>
        {feedbackTextArr.map((text, i) => {
          return (
            <div className={styles.feedbackTextStyle} key={i}>
              <p className={styles.feedbackText}>{text}</p>
            </div>
          );
        })}
      </div>
      {/* –±–ª–æ–∫ –≤–≤–æ–¥–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ */}
      <form onSubmit={onSubmit}>
        <input
          value={inputValue}
          className={styles.feedbackInput}
          placeholder="–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
          onChange={(e) => setInputValue(e.target.value)}
        ></input>
      </form>
      {/* –±–ª–æ–∫ —ç–º–æ–¥–∂–∏ */}
      <div className={styles.feedbackIcons}>
        {IconeArr?.map((icon, index) => (
          <div className={styles.feedbackIcon} key={index}>
            <img src={icon.iconName} alt={icon.alt}  onClick={handleIconClick} />
            <p className={styles.feedbackIconCount}>{'99+'}</p>
          </div>
        ))}
      </div>
    </div>
  );
};
